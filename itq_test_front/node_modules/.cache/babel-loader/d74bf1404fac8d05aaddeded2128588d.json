{"ast":null,"code":"var _jsxFileName = \"/home/andrey/my_projects/test_tasks/test_itq-group/itq_test_front_api/src/components/Draw_graphs.jsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport cs from './Draw_graphs.module.css';\nimport fconfig from \"../fconfig.json\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ReactEcharts from 'echarts-for-react';\nvar base_url = JSON.stringify(fconfig[\"api\"][\"root\"]).replace(/['\"]+/g, '');\n\nclass DrawGraphs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true,\n      isFetching: true,\n      error: null,\n      data: null,\n      start_date: \"2020-01-10\",\n      end_date: \"2020-01-14\",\n      city_name: \"Moscow\",\n      style: {\n        height_graph: \"300px\"\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.UpdateState = this.UpdateState.bind(this);\n    this.PutState = this.PutState.bind(this);\n    this.getOption = this.getOption.bind(this);\n  } ///////////////////////\n\n\n  PutState(event) {\n    axios.get(base_url + '/RR/api/v1.0/data/upload', {\n      params: {\n        city: this.state.city_name,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date\n      },\n      headers: {\n        // Перечисляем разрешённые методы\n        \"Access-Control-Allow-Methods\": \"GET\"\n      }\n    }).then(response => {\n      if ('error' in response.data) throw new Error(response.data['error']);\n      console.log(response); // выводим в консоль получаемые обьекты\n\n      this.setState({\n        data: response.data\n      });\n    }).catch(e => console.log(e));\n  } ///////////////////////\n\n\n  UpdateState(event) {\n    axios.get(base_url + '/RR/api/v1.0/data/get', {\n      params: {\n        city: this.state.city_name,\n        start_date: this.state.start_date,\n        end_date: this.state.end_date\n      },\n      headers: {\n        // Перечисляем разрешённые методы\n        \"Access-Control-Allow-Methods\": \"GET\"\n      }\n    }).then(response => {\n      if ('error' in response.data) throw new Error(response.data['error']);\n      console.log(response); // выводим в консоль получаемые обьекты\n\n      this.setState({\n        data: response.data\n      });\n    }).catch(e => console.log(e));\n  } /////////////////////////////////////\n\n\n  handleClick(event) {\n    const name = event.target.name;\n    if (name === \"get\") this.UpdateState(event);\n    if (name === \"upload\") this.PutState(event);\n  } //////////////////////////////////////\n\n\n  onChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  } //////////////////////\n\n\n  componentDidMount(event) {\n    this.UpdateState(event);\n  } /////////////////////\n  //функция рисования графика\n\n\n  getOption(type_data) {\n    //ждем пока данные полностью загрузятся и тогда отрисовываем график\n    if (this.state.data !== null) {\n      let option = {\n        legend: {},\n        tooltip: {},\n        dataset: {\n          dimensions: ['date', type_data],\n          source: this.state.data['data'].map(item => ({\n            date: new Date(item.dt),\n            [type_data]: item[type_data]\n          }))\n        },\n        xAxis: {\n          type: 'time'\n        },\n        yAxis: {},\n        series: [{\n          type: 'line'\n        }]\n      };\n      return option;\n    } else {\n      let option = {};\n      return option;\n    }\n  } ////////////////////\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cs.page_wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cs.page__form_data_wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formHorizontal1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cs.row_three_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      bsPrefix: cs.title_field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430:\")), React.createElement(Form.Control, {\n      name: \"start_date\",\n      type: \"date\",\n      required: \"required\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formHorizontal2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cs.row_three_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      bsPrefix: cs.title_field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"\\u041A\\u043E\\u043D\\u0435\\u0447\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430:\")), React.createElement(Form.Control, {\n      name: \"end_date\",\n      type: \"date\",\n      required: \"required\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formHorizontal2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cs.row_three_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      bsPrefix: cs.title_field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430:\")), React.createElement(Form.Control, {\n      name: \"city_name\",\n      type: \"text\",\n      required: \"required\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cs.aligin_bottom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      name: \"upload\",\n      className: cs.button_upload,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cs.aligin_bottom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      name: \"get\",\n      className: cs.button_upload,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\")))))), React.createElement(\"div\", {\n      className: cs.page__graph_data_wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      ref: \"echartsInstance\",\n      style: {\n        height: '500px'\n      },\n      option: this.getOption('temp'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      ref: \"echartsInstance\",\n      option: this.getOption('pres'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      ref: \"echartsInstance\",\n      option: this.getOption('rh'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default DrawGraphs;","map":{"version":3,"sources":["/home/andrey/my_projects/test_tasks/test_itq-group/itq_test_front_api/src/components/Draw_graphs.jsx"],"names":["React","Form","Button","axios","cs","fconfig","Col","Row","ReactEcharts","base_url","JSON","stringify","replace","DrawGraphs","Component","constructor","props","state","isToggleOn","isFetching","error","data","start_date","end_date","city_name","style","height_graph","onChange","bind","handleClick","UpdateState","PutState","getOption","event","get","params","city","headers","then","response","Error","console","log","setState","catch","e","name","target","value","componentDidMount","type_data","option","legend","tooltip","dataset","dimensions","source","map","item","date","Date","dt","xAxis","type","yAxis","series","render","page_wrapper","page__form_data_wrapper","row_three_item","title_field","aligin_bottom","button_upload","page__graph_data_wrapper","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport cs from './Draw_graphs.module.css';\nimport fconfig from \"../fconfig.json\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ReactEcharts from 'echarts-for-react';\n\nvar base_url = JSON.stringify(fconfig[\"api\"][\"root\"]).replace(/['\"]+/g, '')\n\n\nclass DrawGraphs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true,\n      isFetching: true,\n      error: null,\n      data : null,\n      start_date : \"2020-01-10\",\n      end_date : \"2020-01-14\",\n      city_name : \"Moscow\",\n      style : {\n        height_graph : \"300px\"\n      }\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.UpdateState = this.UpdateState.bind(this);\n    this.PutState = this.PutState.bind(this);\n    this.getOption = this.getOption.bind(this);\n  }\n\n  ///////////////////////\n  PutState(event) {\n\n    axios.get(base_url+'/RR/api/v1.0/data/upload',{\n      params: {\n        city : this.state.city_name,\n        start_date : this.state.start_date,\n        end_date : this.state.end_date\n      },\n      headers: {\n        // Перечисляем разрешённые методы\n        \"Access-Control-Allow-Methods\": \"GET\"\n      }\n    })\n    .then(\n      (response) => {\n\n        if ('error' in response.data)\n        throw new Error(response.data['error']);\n\n        console.log(response) // выводим в консоль получаемые обьекты\n        this.setState({\n          data: response.data\n        });\n      }\n    )\n    .catch(e => console.log(e));\n\n  }\n\n  ///////////////////////\n  UpdateState(event) {\n\n    axios.get(base_url+'/RR/api/v1.0/data/get',{\n      params: {\n        city : this.state.city_name,\n        start_date : this.state.start_date,\n        end_date : this.state.end_date\n      },\n      headers: {\n        // Перечисляем разрешённые методы\n        \"Access-Control-Allow-Methods\": \"GET\"\n      }\n    })\n    .then(\n      (response) => {\n\n        if ('error' in response.data)\n        throw new Error(response.data['error']);\n\n        console.log(response) // выводим в консоль получаемые обьекты\n        this.setState({\n          data: response.data\n        });\n      }\n    )\n    .catch(e => console.log(e));\n\n  }\n  /////////////////////////////////////\n\n  handleClick(event) {\n    const name = event.target.name;\n\n    if (name === \"get\")\n    this.UpdateState(event)\n\n    if (name === \"upload\")\n    this.PutState(event)\n\n  }\n  //////////////////////////////////////\n  onChange(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({\n      [name]: value\n    })\n\n  }\n\n  //////////////////////\n  componentDidMount(event) {\n\n    this.UpdateState(event)\n\n  }\n  /////////////////////\n  //функция рисования графика\n  getOption(type_data) {\n\n    //ждем пока данные полностью загрузятся и тогда отрисовываем график\n    if (this.state.data !== null)\n    {\n\n      let option = {\n        legend: {},\n        tooltip: {},\n        dataset: {\n          dimensions: ['date',type_data],\n          source: this.state.data['data'].map(\n            (item) => (\n              {\n                date: new Date(item.dt),\n                [type_data]: item[type_data]\n              }\n            )\n          )\n        },\n        xAxis: {type: 'time'},\n        yAxis: {},\n        series: [\n          {type: 'line'},\n        ]\n      };\n      return option;\n    }\n    else\n    {\n      let option = {};\n      return option;\n    }\n\n  }\n  ////////////////////\n\n\n  render() {\n    return (\n      <div>\n        <div className={cs.page_wrapper}>\n          <div className={cs.page__form_data_wrapper}>\n            <Form>\n              <Form.Row>\n\n                <Form.Group  as={Col} controlId=\"formHorizontal1\">\n                  <div className={cs.row_three_item}>\n                    <Form.Label bsPrefix={cs.title_field}><b>Начальная дата:</b></Form.Label>\n                    <Form.Control name=\"start_date\" type=\"date\" required=\"required\"  onChange={this.onChange} />\n                  </div>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formHorizontal2\">\n                  <div className={cs.row_three_item}>\n                    <Form.Label bsPrefix={cs.title_field}><b>Конечная дата:</b></Form.Label>\n                    <Form.Control name=\"end_date\" type=\"date\" required=\"required\" onChange={this.onChange} />\n                  </div>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formHorizontal2\">\n                  <div className={cs.row_three_item}>\n                    <Form.Label bsPrefix={cs.title_field}><b>Название города:</b></Form.Label>\n                    <Form.Control name=\"city_name\" type=\"text\" required=\"required\" onChange={this.onChange} />\n                  </div>\n                </Form.Group>\n              </Form.Row>\n\n              <Row>\n                <Col>\n                  <div className={cs.aligin_bottom} >\n                    <Button type=\"submit\" name=\"upload\" className={cs.button_upload}  onClick={this.handleClick}>\n                      Загрузить данные\n                    </Button>\n                  </div>\n                </Col>\n                <Col>\n                  <div className={cs.aligin_bottom} >\n                    <Button type=\"submit\" name=\"get\" className={cs.button_upload}  onClick={this.handleClick}>\n                      Обновить данные\n                    </Button>\n                  </div>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n          <div className={cs.page__graph_data_wrapper}>\n            <Row>\n              <Col>\n                <ReactEcharts ref='echartsInstance'\n                  style={{ height: '500px'}}\n                  option={this.getOption('temp')} />\n              </Col>\n              <Col>\n                <ReactEcharts ref='echartsInstance'\n                  option={this.getOption('pres')} />\n              </Col>\n              <Col>\n                <ReactEcharts ref='echartsInstance'\n                  option={this.getOption('rh')} />\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\n\nexport default DrawGraphs;\n"]},"metadata":{},"sourceType":"module"}