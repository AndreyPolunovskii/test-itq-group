{"version":3,"sources":["components/Draw_graphs.module.css","components/Draw_graphs.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","base_url","JSON","stringify","fconfig","replace","DrawGraphs","props","state","isFetching","error","data1","data2","start_date1","end_date1","city_name1","start_date2","end_date2","city_name2","style","height_graph","onChange","bind","handleClick","UpdateState","PutState","getOption","response","data","Err","Error","this","setState","length","event","type_data","my_city","my_start_date","my_end_date","axios","get","params","city","start_date","end_date","headers","then","checkData","console","log","catch","e","alert","message","name","target","preventDefault","value","months","type_unit","legend","elements","point","display","title","text","tooltip","trigger","xAxis","axisTick","alignWithLabel","axisLine","onZero","axisLabel","formatter","index","myDate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","axisPointer","label","date","map","item","dt","yAxis","series","type","smooth","className","cs","page__wrapper","page__title_wrapper","page__main_title_wrapper","page__form_data_wrapper","page__title_form_data_wrapper","page__title_form_one_data_wrapper","Form","Row","Group","as","Col","controlId","row_three_item","Label","bsPrefix","title_field","Control","defaultValue","required","xs","Button","variant","button_upload","onClick","renderTitle","page__graph_data_wrapper","ref","height","option","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3111ce57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page__wrapper\":\"Draw_graphs_page__wrapper__31PQq\",\"page__title_form_one_data_wrapper\":\"Draw_graphs_page__title_form_one_data_wrapper__1osst\",\"page__title_form_data_wrapper\":\"Draw_graphs_page__title_form_data_wrapper__RXHPq\",\"page__form_data_wrapper\":\"Draw_graphs_page__form_data_wrapper__2ZLka\",\"page__graph_data_wrapper\":\"Draw_graphs_page__graph_data_wrapper__1nuG6\",\"page__main_title_wrapper\":\"Draw_graphs_page__main_title_wrapper__2su8c\",\"page__title_wrapper\":\"Draw_graphs_page__title_wrapper__3PyKH\"};","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport cs from './Draw_graphs.module.css';\nimport fconfig from \"../fconfig.json\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ReactEcharts from 'echarts-for-react';\n\nvar base_url = JSON.stringify(fconfig[\"api\"][\"root\"]).replace(/['\"]+/g, '')\n\n\nclass DrawGraphs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      error: null,\n      data1 : null,\n      data2 : null,\n      start_date1 : \"2020-01-13\",\n      end_date1 : \"2020-01-14\",\n      city_name1 : \"Moscow\",\n      start_date2 : \"2020-01-13\",\n      end_date2 : \"2020-01-14\",\n      city_name2 : \"Paris\",\n      style : {\n        height_graph : \"400px\"\n      }\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.UpdateState = this.UpdateState.bind(this);\n    this.PutState = this.PutState.bind(this);\n    this.getOption = this.getOption.bind(this);\n  }\n  ///////////////////////\n  //функция проверки на ошибки со стороны бэка\n  checkData(response) {\n\n    //если какие то ошибки (надо их выводить на экран)\n    if ('error' in response.data)\n    {\n      let Err = new Error(response.data['error']);\n      this.setState({\n        error : Err\n      })\n      throw Err;\n    }\n\n    //если пустой датасет\n    if (response.data != null)\n    if (response.data['data'].length === 0)\n    {\n      let Err = new Error(\"нет данных\");\n      this.setState({\n        error: Err\n      })\n      throw Err;\n    }\n  }\n  ///////////////////////\n  //запрос в случае обращения к внешнему источнику\n  PutState(event,type_data) {\n\n    if (type_data === 'data1')\n    {\n      var my_city = this.state.city_name1;\n      var my_start_date = this.state.start_date1;\n      var my_end_date = this.state.end_date1;\n    }\n      else\n    {\n      var my_city = this.state.city_name2;\n      var my_start_date = this.state.start_date2;\n      var my_end_date = this.state.end_date2;\n    }\n\n\n    axios.get(base_url+'/data/upload',{\n      params: {\n        city : my_city,\n        start_date : my_start_date,\n        end_date : my_end_date\n      },\n      headers: {\n        // Перечисляем разрешённые методы\n        \"Access-Control-Allow-Methods\": \"GET\"\n      }\n    })\n    .then(\n      (response) => {\n        this.checkData(response);\n        console.log(response) // выводим в консоль получаемые обьекты\n        this.setState({\n          [type_data]: response.data\n        });\n      }\n    )\n    .catch(e => {\n      console.log(e)\n      this.setState({\n        error: e\n      });\n      alert(this.state.error.message)\n    }\n  )\n\n}\n\n///////////////////////\n//запрос в случае обращения в базу\nUpdateState(event,type_data) {\n\n  if (type_data === 'data1')\n  {\n    var my_city = this.state.city_name1;\n    var my_start_date = this.state.start_date1;\n    var my_end_date = this.state.end_date1;\n  }\n    else\n  {\n    var my_city = this.state.city_name2;\n    var my_start_date = this.state.start_date2;\n    var my_end_date = this.state.end_date2;\n  }\n\n\n  axios.get(base_url+'/data/get',{\n    params: {\n      city : my_city,\n      start_date : my_start_date,\n      end_date : my_end_date\n    },\n    headers: {\n      // Перечисляем разрешённые методы\n      \"Access-Control-Allow-Methods\": \"GET\"\n    }\n  })\n  .then(\n    (response) => {\n      this.checkData(response);\n      console.log(response) // выводим в консоль получаемые обьекты\n      this.setState({\n        [type_data]: response.data\n      });\n    }\n  )\n  .catch(e => {\n    console.log(e)\n    this.setState({\n      error: e\n    });\n    alert(this.state.error.message)\n  }\n)\n\n}\n/////////////////////////////////////\n//callback при нажатии на кнопку\nhandleClick(event) {\n  const name = event.target.name;\n\n\n  event.preventDefault();\n\n  if (name === \"get\")\n  {\n    this.UpdateState(event,'data1')\n    this.UpdateState(event,'data2')\n  }\n\n\n  if (name === \"upload\")\n  {\n    this.PutState(event,'data1')\n    this.PutState(event,'data2')\n  }\n\n\n}\n//////////////////////////////////////\n//callback при изменении поля\nonChange(e) {\n  const name = e.target.name;\n  const value = e.target.value;\n\n  this.setState({\n    [name]: value\n  })\n\n}\n\n//////////////////////\n//метод жизненного цикла компонента\n//вызывается сразу после монтирования компонента в DOM\ncomponentDidMount(event) {\n\n  this.UpdateState(event,'data1')\n  this.UpdateState(event,'data2')\n\n}\n\n/////////////////////\n//функция рисования графика\ngetOption(type_data) {\n\n  var months = [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\",\n                  \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\n\n  let title = \"\",type_unit = \"\";\n  if (type_data === \"temp\")\n  {\n    title = \"Температура\"\n    type_unit =\"[°C]\"\n  }\n\n\n  if (type_data === \"pres\")\n  {\n    title = \"Давление\"\n    type_unit =\"[mb]\"\n  }\n\n  if (type_data === \"rh\")\n  {\n    title = \"влажность\"\n    type_unit =\"[%]\"\n  }\n\n\n  //ждем пока данные полностью загрузятся и тогда отрисовываем график\n  if (this.state.data1 !== null && this.state.data2 !== null)\n  {\n\n    let option = {\n      legend: {},\n      elements: {\n        point: {\n          display: true\n        }\n      },\n      title: {text:type_unit},\n      tooltip: {\n        trigger: 'axis'\n        },\n      xAxis: {\n        axisTick: {\n          alignWithLabel: true\n        },\n        axisLine: {\n          onZero: false\n        },\n        axisLabel : {\n          formatter: function (value, index) {\n            // Formatted to be month/day; display year only in the first label\n            let myDate = new Date(value);\n            let fullDate = myDate.getDate() + \" \" + months[myDate.getMonth()] + \" \" + myDate.getFullYear() + \" \" + myDate.getHours() +\":\"+myDate.getMinutes()+\":\"+myDate.getSeconds() ;\n            return fullDate;\n          }\n        },\n        axisPointer: {\n          label: {\n            formatter: function (date) {\n              let myDate = new Date(date.value);\n              let fullDate = myDate.getDate() + \" \" + months[myDate.getMonth()] + \" \" + myDate.getFullYear() + \" \" + myDate.getHours() +\":\"+myDate.getMinutes()+\":\"+myDate.getSeconds() ;\n              return fullDate;\n            }\n          }\n        },\n        data: this.state.data1['data'].map((item) => (item.dt))\n      },\n      yAxis: {},\n      series: [\n        {\n          data: this.state.data1['data'].map(function (item) {\n            return item[type_data];\n          }),\n          name: this.state.data1['data'][0]['city_name'] +\" (1)\",\n          type: 'line',\n          smooth: 0.5  //включаем сглаживание\n        },\n        {\n          data: this.state.data2['data'].map(function (item) {\n            return item[type_data];\n          }),\n          name: this.state.data2['data'][0]['city_name']+\" (2)\",\n          type: 'line',\n          smooth: 0.5  //включаем сглаживание\n        }\n      ]\n\n\n    };\n    return option;\n  }\n  else\n  {\n    let option = {};\n    return option;\n  }\n\n}\n////////////////////\n//функция отрисовки титульной надписи\nrenderTitle(data) {\n  if (this.state.data1 !== null && this.state.data2 !== null)\n  {\n    return( <p><b>Выбранные города - {this.state.data1['data'][0]['city_name']} ({this.state.data1['data'][0]['country_code']})\n                       и {this.state.data2['data'][0]['city_name']} ({this.state.data2['data'][0]['country_code']})</b></p> );\n  }\n  else {\n    return(<p></p>);\n  }\n\n}\n\n/////////////////////\n\n//функция рендера\nrender() {\n  let {style,data} = this.state;\n  return (\n    <div>\n      <div className={cs.page__wrapper}>\n        <div className={`${cs.page__title_wrapper} ${cs.page__main_title_wrapper}`}>\n          <b>Погодные данные</b>\n          <hr></hr>\n        </div>\n        <div className={cs.page__form_data_wrapper}>\n          <p className={cs.page__title_form_data_wrapper}><b>Введите основные параметры:</b></p>\n          <hr></hr>\n          <p className={cs.page__title_form_one_data_wrapper}><b>Первый набор данных:</b></p>\n          <Form>\n            <Form.Row>\n              <Form.Group  as={Col} controlId=\"formHorizontal1\">\n                <div className={cs.row_three_item}>\n                  <Form.Label bsPrefix={cs.title_field}><b>Начальная дата:</b></Form.Label>\n                  <Form.Control name=\"start_date1\" defaultValue=\"2020-01-13\" type=\"date\" required=\"required\"  onChange={this.onChange} />\n                </div>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formHorizontal2\">\n                <div className={cs.row_three_item}>\n                  <Form.Label bsPrefix={cs.title_field}><b>Конечная дата:</b></Form.Label>\n                  <Form.Control name=\"end_date1\" defaultValue=\"2020-01-14\" type=\"date\" required=\"required\" onChange={this.onChange} />\n                </div>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formHorizontal2\">\n                <div className={cs.row_three_item}>\n                  <Form.Label bsPrefix={cs.title_field}><b>Название города (на английском):</b></Form.Label>\n                  <Form.Control name=\"city_name1\" defaultValue=\"Moscow\" type=\"text\" required=\"required\" onChange={this.onChange} />\n                </div>\n              </Form.Group>\n            </Form.Row>\n            <p className={cs.page__title_form_one_data_wrapper}><b>Второй набор данных:</b></p>\n            <Form.Row>\n              <Form.Group  as={Col} controlId=\"formHorizontal1\">\n                <div className={cs.row_three_item}>\n                  <Form.Label bsPrefix={cs.title_field}><b>Начальная дата:</b></Form.Label>\n                  <Form.Control name=\"start_date2\" defaultValue=\"2020-01-13\" type=\"date\" required=\"required\"  onChange={this.onChange} />\n                </div>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formHorizontal2\">\n                <div className={cs.row_three_item}>\n                  <Form.Label bsPrefix={cs.title_field}><b>Конечная дата:</b></Form.Label>\n                  <Form.Control name=\"end_date2\" defaultValue=\"2020-01-14\" type=\"date\" required=\"required\" onChange={this.onChange} />\n                </div>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formHorizontal2\">\n                <div className={cs.row_three_item}>\n                  <Form.Label bsPrefix={cs.title_field}><b>Название города (на английском):</b></Form.Label>\n                  <Form.Control name=\"city_name2\" defaultValue=\"Paris\" type=\"text\" required=\"required\" onChange={this.onChange} />\n                </div>\n              </Form.Group>\n            </Form.Row>\n            <p><i>Внешний ресурс https://www.weatherbit.io/ ограничивает количество запрашивемых данных с интервалом времени до одного дня.</i>\n            <br></br><i>Соотвественно можно последовательно по дню загружать данные с внешнего источника, и из локальной базы получать уже полный временной интервал</i>\n            <br></br><i>Максимальное количество запросов к внешнему ресурсу ограничивается до 500 в сутки.</i></p>\n            <Row>\n              <Col xs={4}>\n                <Button type=\"submit\" variant=\"warning\" name=\"upload\" className={cs.button_upload}  onClick={this.handleClick}>\n                  Загрузить данные с внешнего ресурса\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button type=\"submit\" variant=\"danger\" name=\"get\" className={cs.button_upload}  onClick={this.handleClick}>\n                  Загрузить данные из локальной базы\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n          <hr></hr>\n        </div>\n\n        <div className={cs.page__title_wrapper}>\n          {this.renderTitle(data)}\n        </div>\n        <div className={cs.page__graph_data_wrapper}>\n          <Row>\n            <Col>\n              <ReactEcharts ref='echartsInstance'\n                style={{ height: style.height_graph}}\n                option={this.getOption('temp')} />\n            </Col>\n            <Col>\n              <ReactEcharts ref='echartsInstance'\n                style={{ height: style.height_graph}}\n                option={this.getOption('pres')} />\n            </Col>\n            <Col>\n              <ReactEcharts ref='echartsInstance'\n                style={{ height: style.height_graph}}\n                option={this.getOption('rh')} />\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n}\n\n\nexport default DrawGraphs;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import logo from './logo.svg';\nimport './App.css';\n\n\n//import Error from \"./components/elements/Error\";\nimport DrawGraphs from \"./components/Draw_graphs\";\n\n\nconst App = () => {\n  return (\n      <div>\n        <DrawGraphs/>\n      </div>\n  )\n}\n\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}